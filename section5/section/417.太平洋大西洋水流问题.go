package section

import (
	"fmt"
)

/*
 * @lc app=leetcode.cn id=417 lang=golang
 *
 * [417] 太平洋大西洋水流问题
 */

// @lc code=start
func pacificAtlantic(heights [][]int) [][]int {
	dirs := [][]int{{0, 1}, {0, -1}, {1, 0}, {-1, 0}}
	search := func(positions [][]int) map[[2]int]struct{} {
		visits := make(map[[2]int]struct{})
		var dfs func(int, int)
		dfs = func(row int, col int) {
			if _, ok := visits[[2]int{row, col}]; ok {
				return
			}

			visits[[2]int{row, col}] = struct{}{}
			for _, dir := range dirs {
				nextRow, nextCol := row+dir[0], col+dir[1]
				if nextRow < 0 || nextRow >= len(heights) || nextCol < 0 || nextCol >= len(heights[0]) {
					continue
				}
				if heights[nextRow][nextCol] >= heights[row][col] {
					dfs(nextRow, nextCol)
				}
			}
		}

		for _, position := range positions {
			dfs(position[0], position[1])
		}
		return visits
	}

	lefts, rights := make([][]int, 0, len(heights)+len(heights[0])), make([][]int, 0, len(heights)+len(heights[0]))
	for i := range heights {
		lefts = append(lefts, []int{i, 0})
		rights = append(rights, []int{i, len(heights[0]) - 1})
	}

	for j := range heights[0] {
		lefts = append(lefts, []int{0, j})
		rights = append(rights, []int{len(heights) - 1, j})
	}

	leftMap, rightMap := search(lefts), search(rights)

	res := make([][]int, 0)
	for position := range leftMap {
		if _, ok := rightMap[position]; ok {
			res = append(res, []int{position[0], position[1]})
		}
	}

	return res
}

// @lc code=end

func Test417() {
	// [[0,95],[0,96],[13,0],[13,1],[13,3],[14,1],[14,2],[14,3],[15,1],[15,2],[15,3],[16,0],[16,3]]
	fmt.Println(pacificAtlantic([][]int{
		{38, 9, 45, 34, 21, 55, 15, 31, 12, 96, 36, 96, 47, 69, 29, 96, 74, 77, 58, 58, 16, 52, 23, 27, 99, 65, 79, 70, 53, 60, 75, 42, 52, 18, 87, 30, 55, 69, 98, 12, 9, 33, 91, 41, 6, 9, 17, 70, 96, 28, 47, 27, 12, 80, 65, 76, 3, 8, 87, 25, 97, 62, 8, 40, 97, 28, 56, 51, 22, 84, 86, 35, 49, 76, 90, 51, 59, 76, 11, 66, 76, 83, 45, 36, 48, 88, 37, 77, 65, 68, 90, 44, 73, 54, 76, 87, 56},
		{76, 72, 12, 7, 66, 80, 23, 73, 66, 33, 11, 19, 73, 3, 0, 32, 37, 88, 51, 66, 88, 1, 86, 40, 97, 14, 54, 9, 66, 61, 53, 98, 89, 71, 70, 84, 41, 31, 97, 89, 70, 36, 61, 61, 18, 90, 96, 57, 86, 80, 93, 67, 56, 97, 25, 81, 50, 48, 56, 77, 96, 51, 28, 86, 32, 33, 77, 63, 55, 84, 67, 48, 9, 59, 49, 61, 2, 47, 23, 66, 75, 61, 74, 32, 88, 44, 56, 16, 76, 53, 42, 54, 75, 9, 0, 50, 45},
		{10, 56, 86, 70, 54, 19, 3, 6, 69, 82, 3, 4, 58, 8, 96, 12, 6, 17, 56, 52, 30, 78, 52, 78, 31, 80, 87, 43, 27, 83, 91, 2, 85, 81, 7, 0, 21, 5, 42, 82, 76, 33, 3, 6, 12, 43, 31, 56, 53, 11, 67, 56, 39, 64, 34, 24, 55, 6, 79, 87, 33, 27, 44, 74, 32, 98, 65, 40, 26, 63, 48, 1, 6, 82, 10, 43, 57, 60, 62, 36, 93, 0, 25, 52, 37, 84, 34, 0, 57, 71, 72, 89, 76, 31, 95, 19, 97},
		{92, 40, 65, 57, 67, 58, 94, 93, 33, 26, 55, 63, 24, 42, 31, 53, 36, 42, 44, 21, 64, 51, 95, 56, 20, 46, 60, 96, 36, 37, 53, 86, 94, 73, 61, 12, 76, 28, 93, 99, 1, 97, 77, 57, 82, 79, 38, 90, 87, 30, 65, 89, 67, 38, 8, 78, 17, 19, 16, 96, 4, 85, 73, 69, 42, 34, 39, 5, 31, 93, 39, 25, 28, 26, 87, 92, 6, 56, 0, 29, 60, 38, 25, 32, 74, 31, 88, 90, 42, 64, 37, 60, 9, 77, 99, 55, 62},
		{81, 39, 64, 10, 18, 48, 83, 24, 5, 92, 10, 1, 94, 70, 96, 16, 97, 49, 27, 96, 61, 66, 31, 34, 86, 95, 25, 2, 42, 58, 65, 75, 56, 84, 60, 55, 47, 59, 49, 34, 26, 4, 34, 54, 57, 35, 28, 55, 63, 25, 13, 61, 29, 88, 23, 87, 0, 78, 86, 60, 7, 11, 81, 29, 21, 8, 61, 25, 19, 25, 19, 29, 49, 75, 1, 41, 32, 32, 41, 97, 16, 98, 27, 45, 3, 62, 0, 47, 66, 50, 71, 58, 50, 13, 56, 24, 92},
		{94, 20, 77, 43, 57, 97, 63, 55, 13, 70, 99, 52, 65, 43, 73, 64, 14, 51, 41, 22, 9, 99, 35, 44, 27, 37, 32, 12, 96, 85, 31, 99, 66, 84, 50, 54, 47, 50, 30, 67, 54, 26, 26, 64, 17, 22, 81, 91, 27, 84, 96, 79, 8, 44, 90, 58, 1, 43, 90, 52, 14, 86, 27, 99, 64, 37, 36, 66, 93, 36, 15, 84, 30, 16, 12, 18, 20, 89, 27, 70, 43, 79, 2, 17, 64, 52, 94, 44, 96, 94, 13, 7, 88, 10, 84, 21, 76},
		{32, 31, 84, 4, 86, 46, 48, 21, 16, 5, 8, 11, 26, 0, 11, 27, 47, 11, 57, 61, 36, 45, 47, 48, 57, 32, 93, 85, 40, 90, 55, 26, 73, 36, 63, 19, 31, 54, 79, 15, 43, 83, 82, 98, 35, 31, 84, 12, 65, 32, 59, 34, 67, 12, 90, 25, 45, 23, 5, 30, 78, 88, 31, 82, 14, 94, 89, 91, 76, 21, 19, 61, 92, 84, 13, 64, 34, 74, 24, 40, 27, 72, 47, 44, 8, 90, 73, 31, 37, 62, 40, 6, 78, 76, 36, 36, 10},
		{45, 47, 43, 61, 93, 17, 49, 64, 47, 89, 33, 5, 27, 51, 93, 32, 4, 12, 50, 71, 21, 24, 38, 61, 54, 78, 91, 50, 40, 67, 88, 54, 9, 12, 81, 71, 23, 26, 80, 22, 76, 38, 66, 53, 27, 81, 30, 61, 74, 67, 0, 75, 19, 11, 3, 50, 14, 55, 21, 28, 85, 38, 94, 48, 35, 78, 45, 92, 87, 65, 26, 3, 0, 55, 79, 95, 90, 63, 66, 61, 88, 87, 7, 74, 33, 58, 20, 71, 27, 98, 13, 53, 58, 58, 86, 47, 70},
		{58, 52, 17, 32, 58, 32, 85, 50, 9, 39, 69, 7, 83, 75, 45, 37, 49, 47, 10, 83, 78, 50, 84, 19, 43, 42, 5, 25, 24, 5, 36, 54, 35, 21, 77, 87, 57, 24, 67, 58, 71, 15, 40, 16, 11, 64, 8, 10, 13, 59, 77, 53, 53, 49, 14, 48, 28, 45, 76, 72, 19, 33, 86, 96, 15, 21, 46, 64, 58, 59, 62, 57, 14, 38, 44, 39, 10, 28, 66, 77, 43, 40, 25, 54, 89, 98, 5, 1, 43, 6, 26, 68, 39, 15, 86, 99, 83},
		{68, 59, 19, 13, 18, 48, 82, 66, 97, 56, 77, 28, 89, 12, 80, 26, 57, 91, 43, 61, 55, 32, 11, 84, 84, 22, 13, 24, 23, 7, 79, 30, 57, 3, 48, 7, 87, 29, 17, 63, 27, 38, 13, 81, 86, 69, 39, 83, 3, 75, 12, 85, 58, 59, 97, 4, 39, 90, 90, 14, 54, 89, 96, 65, 49, 32, 54, 95, 63, 8, 18, 92, 81, 97, 65, 38, 31, 42, 44, 69, 74, 25, 21, 29, 29, 98, 15, 59, 69, 20, 89, 62, 14, 77, 63, 4, 35},
		{92, 50, 24, 59, 17, 58, 26, 98, 92, 59, 61, 56, 58, 49, 73, 76, 33, 82, 10, 1, 54, 65, 57, 95, 38, 4, 10, 0, 50, 63, 38, 59, 29, 64, 76, 53, 13, 56, 68, 67, 0, 32, 44, 8, 41, 25, 55, 16, 79, 50, 67, 43, 87, 87, 53, 95, 54, 48, 48, 73, 21, 12, 93, 71, 93, 96, 71, 91, 79, 28, 27, 64, 18, 76, 58, 13, 40, 21, 30, 68, 98, 42, 23, 42, 47, 94, 8, 1, 1, 32, 7, 47, 77, 67, 2, 20, 53},
		{25, 99, 19, 87, 83, 35, 88, 28, 54, 99, 14, 86, 91, 47, 72, 92, 2, 80, 97, 85, 45, 70, 44, 8, 74, 3, 56, 87, 27, 28, 56, 81, 17, 73, 83, 26, 67, 79, 15, 7, 64, 87, 95, 56, 77, 46, 69, 99, 38, 49, 26, 34, 21, 34, 49, 73, 4, 60, 78, 45, 96, 49, 11, 49, 34, 6, 2, 32, 18, 68, 74, 43, 48, 62, 24, 9, 95, 90, 47, 29, 25, 10, 11, 16, 25, 25, 23, 61, 27, 35, 7, 90, 70, 89, 17, 65, 37},
		{1, 55, 79, 84, 74, 41, 96, 31, 1, 25, 85, 39, 52, 93, 92, 60, 8, 86, 71, 29, 59, 91, 48, 59, 70, 25, 59, 50, 22, 36, 52, 97, 70, 44, 93, 55, 69, 23, 66, 8, 6, 26, 81, 99, 24, 48, 49, 39, 37, 42, 50, 21, 71, 9, 5, 20, 43, 98, 10, 19, 2, 19, 32, 4, 69, 80, 14, 9, 0, 45, 53, 17, 31, 87, 21, 70, 53, 63, 16, 90, 47, 22, 97, 33, 70, 99, 18, 65, 13, 20, 91, 97, 41, 52, 80, 20, 62},
		{78, 65, 50, 95, 34, 84, 0, 35, 1, 67, 41, 80, 26, 61, 77, 49, 56, 88, 6, 75, 12, 86, 23, 32, 49, 9, 17, 93, 7, 11, 46, 94, 40, 94, 0, 68, 50, 17, 2, 42, 22, 33, 30, 17, 67, 84, 55, 91, 67, 60, 55, 15, 74, 28, 2, 84, 16, 20, 26, 88, 33, 18, 22, 95, 41, 74, 53, 85, 15, 26, 31, 72, 75, 75, 43, 71, 47, 77, 97, 77, 67, 45, 77, 70, 61, 70, 70, 29, 0, 49, 96, 94, 34, 46, 35, 59, 97},
		{0, 64, 98, 94, 5, 67, 94, 80, 76, 15, 47, 77, 12, 87, 7, 40, 86, 86, 56, 86, 54, 54, 60, 67, 91, 27, 52, 37, 77, 42, 77, 96, 13, 21, 49, 78, 52, 97, 62, 77, 36, 47, 73, 10, 24, 57, 26, 90, 27, 4, 16, 85, 13, 48, 83, 12, 38, 4, 42, 66, 32, 12, 5, 10, 72, 85, 64, 53, 80, 34, 74, 91, 32, 70, 32, 29, 67, 63, 20, 1, 21, 79, 27, 21, 75, 62, 60, 31, 87, 82, 44, 98, 59, 42, 63, 63, 1},
		{19, 27, 27, 49, 2, 69, 64, 39, 96, 77, 87, 95, 48, 91, 48, 15, 9, 64, 59, 80, 60, 58, 47, 25, 53, 5, 57, 62, 71, 23, 35, 77, 79, 11, 57, 83, 33, 87, 85, 29, 53, 95, 15, 93, 37, 10, 69, 61, 96, 12, 30, 84, 0, 29, 14, 53, 61, 14, 62, 37, 34, 54, 22, 39, 9, 68, 26, 98, 14, 12, 11, 75, 50, 56, 71, 78, 38, 17, 51, 84, 35, 43, 78, 7, 4, 94, 7, 70, 23, 35, 10, 39, 70, 59, 76, 68, 42},
		{30, 3, 26, 87, 52, 0, 77, 38, 78, 95, 80, 2, 48, 7, 48, 66, 56, 53, 93, 46, 39, 62, 53, 38, 91, 56, 50, 92, 61, 65, 51, 33, 32, 20, 47, 14, 36, 98, 97, 89, 89, 36, 20, 47, 88, 83, 63, 46, 60, 76, 53, 4, 37, 43, 9, 39, 99, 29, 96, 84, 38, 97, 28, 82, 87, 88, 52, 40, 34, 71, 41, 35, 50, 6, 2, 3, 19, 4, 55, 70, 27, 54, 97, 34, 33, 18, 10, 60, 78, 48, 3, 25, 34, 76, 96, 70, 23},
	}))
	// [[0,25],[15,0],[15,1],[15,2],[15,3]]
	fmt.Println(pacificAtlantic([][]int{
		{10, 10, 1, 11, 2, 15, 17, 6, 17, 10, 0, 10, 18, 9, 16, 13, 8, 9, 12, 6, 3, 2, 5, 19, 4, 14},
		{12, 19, 13, 2, 7, 2, 3, 8, 17, 4, 2, 1, 8, 13, 7, 2, 10, 16, 12, 3, 4, 12, 4, 16, 0, 12},
		{1, 12, 9, 18, 12, 16, 17, 5, 13, 0, 7, 13, 12, 13, 6, 2, 11, 19, 7, 2, 6, 11, 11, 0, 17, 6},
		{1, 12, 2, 0, 11, 7, 7, 3, 7, 13, 11, 1, 11, 15, 5, 13, 14, 12, 4, 10, 5, 16, 3, 17, 18, 12},
		{9, 16, 11, 5, 9, 13, 7, 18, 18, 14, 19, 10, 9, 4, 8, 14, 4, 19, 13, 1, 14, 8, 0, 3, 12, 10},
		{10, 19, 9, 11, 1, 18, 1, 2, 1, 8, 1, 5, 2, 15, 14, 13, 18, 18, 11, 4, 15, 3, 15, 12, 12, 2},
		{0, 10, 9, 2, 15, 9, 12, 7, 0, 0, 12, 18, 9, 12, 18, 4, 18, 10, 3, 1, 17, 14, 13, 18, 9, 4},
		{3, 19, 9, 16, 16, 19, 11, 19, 6, 9, 18, 0, 12, 11, 13, 1, 15, 6, 9, 18, 9, 6, 3, 12, 12, 2},
		{0, 16, 15, 12, 3, 19, 18, 9, 5, 1, 4, 3, 19, 15, 1, 0, 7, 10, 14, 4, 8, 10, 15, 16, 14, 8},
		{15, 9, 3, 15, 19, 17, 17, 10, 9, 8, 16, 11, 3, 15, 15, 9, 1, 14, 11, 13, 16, 7, 1, 7, 13, 5},
		{9, 19, 6, 7, 19, 14, 4, 18, 6, 10, 19, 13, 12, 7, 7, 15, 6, 10, 7, 8, 8, 8, 19, 13, 17, 14},
		{14, 7, 1, 15, 2, 6, 12, 4, 2, 19, 17, 17, 8, 9, 19, 10, 0, 12, 4, 12, 4, 16, 15, 18, 8, 0},
		{4, 8, 5, 8, 0, 2, 19, 18, 1, 7, 13, 9, 13, 16, 6, 15, 15, 12, 18, 5, 8, 11, 6, 17, 5, 11},
		{17, 16, 9, 19, 12, 6, 13, 19, 0, 6, 7, 9, 7, 13, 9, 18, 5, 15, 16, 8, 18, 9, 6, 0, 11, 14},
		{11, 5, 13, 3, 12, 19, 5, 15, 2, 15, 9, 16, 6, 12, 8, 0, 19, 19, 11, 0, 16, 8, 15, 15, 1, 12},
		{15, 16, 16, 19, 14, 1, 2, 11, 14, 8, 16, 13, 2, 0, 3, 8, 1, 5, 4, 15, 12, 5, 13, 3, 5, 3},
	}))
	// [[0,4],[1,3],[1,4],[2,2],[3,0],[3,1],[4,0]]
	fmt.Println(pacificAtlantic([][]int{
		{1, 2, 2, 3, 5},
		{3, 2, 3, 4, 4},
		{2, 4, 5, 3, 1},
		{6, 7, 1, 4, 5},
		{5, 1, 1, 2, 4},
	}))

	// [[0,0],[0,1],[1,0],[1,1]]
	fmt.Println(pacificAtlantic([][]int{
		{2, 1},
		{1, 2},
	}))
}
